version: 2
jobs:
  build:
    parallelism: 3
    docker:
      - image: circleci/ruby:2.5.3-stretch-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: circleci-demo-ruby
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: rialto_test
          POSTGRES_PASSWORD: ""
      - image: solr:7
        command: bin/solr -cloud -noprompt -f -p 8983
    steps:
      - checkout

      # Upgrade bundler
      - run:
          name: Install Bundler
          command: gem install bundler

      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v

      # Restore bundle cache
      - restore_cache:
          keys:
            - rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
            - rails-demo-bundle-v2-

      - run:
          name: Bundle Install
          command: bundle check || bundle install

      # Store bundle cache
      - save_cache:
          key: rails-demo-bundle-v2-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Only necessary if app uses webpacker or yarn in some other way
      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}
            - rails-demo-yarn-

      - run:
          name: Yarn Install
          command: yarn install --cache-folder ~/.cache/yarn

      # Store yarn / webpacker cache
      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Database setup
          command: bin/rails db:schema:load --trace

      # Create a Solr collection
      - run:
          name: Load config into SolrCloud
          command: |
            cd solr/conf
            zip -1 -r solr_config.zip ./*
            curl -H "Content-type:application/octet-stream" --data-binary @solr_config.zip "http://localhost:8983/solr/admin/configs?action=UPLOAD&name=blacklight-core"
            curl -H 'Content-type: application/json' http://localhost:8983/api/collections/ -d '{create: {name: blacklight-core, config: blacklight-core, numShards: 1}}'

      - run:
          name: Check styles using rubocop
          command: bundle exec rubocop

      # Run rspec in parallel
      - run:
          name: Run rspec in parallel
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      # Run mocha
      - run:
          name: Run mocha
          command: npm test



      # Save test results for timing analysis
      - store_test_results:
          path: test_results

  register_image:
    docker:
      - image: circleci/ruby:2.5.3-stretch-node
    steps:
      - setup_remote_docker:
          version: 18.05.0-ce
      - checkout
      - run:
          name: Bundle Install
          command: bundle check || bundle install
      - run:
          name: Build Image & Register Task
          command: |
            ./bin/build
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push suldlss/rialto-webapp:latest

workflows:
  version: 2

  build:
    jobs:
      - build:
          filters:
            branches:
              ignore: master
      - register_image:
          requires:
          filters:
            branches:
              only: master
